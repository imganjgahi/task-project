{"version":3,"sources":["assets/arrow.svg","assets/logout.svg","assets/icon.svg","assets/loading.svg","Actions/Tasks/ActionType.js","GeneralConst.js","AxiosConfig.js","Actions/Tasks/api.js","Components/Modals/ErrorModal.jsx","Actions/Tasks/Actions.js","Utils/Spinner.jsx","Components/Modals/Modal.jsx","Utils/FormController.js","Utils/FormElements/Select/Option.js","Utils/FormElements/Select/COption.js","Utils/FormElements/Select/Select.js","Components/Tasks/Create.jsx","Actions/SubTasks/ActionType.js","Actions/SubTasks/api.js","Actions/SubTasks/Actions.js","Components/SubTask/Create.jsx","Utils/Access.jsx","Utils/menuIcon.jsx","Utils/StatusBox.jsx","Components/SubTask/Card.jsx","Components/Tasks/Card.jsx","Components/Tasks/List.jsx","Components/Panel/Panel.jsx","Actions/Auth/ActionType.js","Actions/Auth/api.js","Actions/Auth/Actions.js","Components/Navbar/Navbar.jsx","Components/Auth/Register.jsx","Components/Auth/Login.jsx","Components/Auth/Auth.jsx","App.js","serviceWorker.js","Actions/Auth/Reducer.js","Actions/Tasks/Reducer.js","Actions/SubTasks/Reducer.js","store/Reducers.js","index.js","store/ConfigureStore.js"],"names":["module","exports","TaksActionTypes","FetchTaskList","FetchTaskListSuccess","FetchTaskListFaild","CreateModalStatus","CreateTask","CreateTaskSuccess","CreateTaskFaild","ChangeTaskStatus","ChangeTaskStatusSuccess","ChangeTaskStatusFaild","urlGeneral","AxiosInstance","Axios","create","headers","interceptors","request","use","config","error","response","status","console","log","logOut","TasksApi","fetchList","a","axios","get","data","post","changeTaskStatus","task","put","_id","EModalHide","mRoot","document","getElementById","ReactDOM","unmountComponentAtNode","EModal","message","render","className","onClick","createModal","open","dispatch","getState","type","res","list","Spinner","loading","msg","icon","text","class","defaultProps","Modal","visible","title","onOk","onCancel","children","useState","isOpen","openStatus","showModal","setShowModal","useEffect","setTimeout","FormCreator","Component","props","itemValidation","name","value","rules","isValid","err","state","forEach","rule","required","toString","trim","max","length","setState","onFormSubmit","item","validationError","getFormValues","resetForm","initialValues","newRules","formItem","itemProps","comp","newValue","undefined","initialvalue","initialElement","defaultValue","label","onChange","e","onChangeHandler","El","React","id","itemElement","this","target","getFormItem","FromItemWrapper","Option","COption","Select","getOptions","url","authorization","token","fetch","then","json","optionList","setInitialValue","moveFocus","getChildren","hideOption","displayProp","valueProp","displayValue","showInput","displayValueItem","filter","showOption","handleClickOutside","optionRef","current","contains","optionHandler","searchValue","ref","focus","event","preventDefault","activeItem","_handleKeyDown","key","matchData","toLocaleLowerCase","datas","match","targetData","onSelectHandler","node","addEventListener","items","activeIndex","keyCode","options","option","i","push","z","x","y","renderOptionList","map","optionElement","optionContainer","prevProps","removeEventListener","canSearch","tabIndex","onKeyDown","onBlur","style","display","width","src","arrowIcon","alt","position","bottom","top","tasks","useSelector","useDispatch","values","createModalStatus","onSubmit","htmlFor","SubTaksActionTypes","SubTasksApi","addSubTask","taskId","changeSubTaskStatus","addSubTaskModal","mainTask","subtask","newSubtask","newSubList","subtasks","Access","role","currentUser","auth","Fragment","MenuIcon","StatusBox","currentStatus","accessRole","statusChange","backgroundColor","SubTaskCard","changeStatus","description","TaskCard","targetSubTask","setTargetSubTask","subtaskLoading","tasksData","taskstatusChangeHandler","updatedTask","JSON","parse","stringify","subTaskstatusChangeHandler","index","targetTask","TaskList","Create","hideScrollbars","Panel","AuthActionTypes","AuthApi","login","userName","register","loginRequest","window","localStorage","setItem","Navbar","isAuth","removeItem","logout","switchPanel","loginData","AuthPanel","panelName","setPanelName","App","Auth","Boolean","location","hostname","unloadedState","reducers","action","FetchTaskListFail","store","middleware","thunk","rootReducer","combineReducers","createStore","compose","applyMiddleware","configureStore","userData","getItem","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0f8a66af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.20c3a03c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.0e8fbe8e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon.5c8eb353.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.fa9054e6.svg\";","export const TaksActionTypes = {\r\n    FetchTaskList: \"Tasks/FetchTaskList\",\r\n    FetchTaskListSuccess: \"Tasks/FetchTaskListSuccess\",\r\n    FetchTaskListFaild: \"Tasks/FetchTaskListFaild\",\r\n\r\n    CreateModalStatus: \"Tasks/CreateModal\",\r\n    \r\n    CreateTask: \"Tasks/CreateTask\",\r\n    CreateTaskSuccess: \"Tasks/CreateTaskSuccess\",\r\n    CreateTaskFaild: \"Tasks/CreateTaskFaild\",\r\n\r\n    ChangeTaskStatus: \"Tasks/ChangeTaskStatus\",\r\n    ChangeTaskStatusSuccess: \"Tasks/ChangeTaskStatusSuccess\",\r\n    ChangeTaskStatusFaild: \"Tasks/ChangeTaskStatusFaild\",\r\n}","export const urlGeneral = \"https://jsonbox.io/box_42a66ad708e6c078c755\"","import Axios from 'axios'\r\nimport {logOut} from './index'\r\nlet AxiosInstance = Axios.create({\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n\r\n});\r\n\r\nAxiosInstance.interceptors.request.use(\r\n  config => {\r\n    \r\n      return config;\r\n  },\r\n  error => {\r\n      return error\r\n  });\r\n\r\nAxiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n  (error) => {\r\n    if (error.response.status === 401) {\r\n      console.log(\"STATUS CODE 401\");\r\n      logOut()\r\n    }\r\n    return error;\r\n  }\r\n)\r\n\r\nexport default AxiosInstance"," import { urlGeneral } from \"../../GeneralConst\"\r\nimport axios from '../../AxiosConfig'\r\n\r\nexport const TasksApi = {\r\n    fetchList : async () => {\r\n        return axios.get(urlGeneral+ \"/tasks\")\r\n    },\r\n    create : async (data) => {\r\n        return axios.post(urlGeneral+ \"/tasks\", data)\r\n    },\r\n    changeTaskStatus : async (task) => {\r\n        return axios.put(urlGeneral+ \"/tasks/\" + task._id, task)\r\n    },\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nexport const EModalHide = () => {\r\n    const mRoot= document.getElementById(\"modal-root\");\r\n    if(mRoot){\r\n        ReactDOM.unmountComponentAtNode(mRoot)\r\n    }\r\n}\r\nexport const EModal = (error) => {\r\n    let message = error;\r\n    console.log(message)\r\n    if(error.message){\r\n        message = error.message\r\n    }\r\n    if(error.response){\r\n        message = error.response.data.message\r\n    }\r\n    ReactDOM.render(<div className=\"emodalcontainer\">\r\n        <div className=\"EModal\">\r\n        <p>خطا :{message}</p>\r\n        <button className=\"btnGold\" onClick={EModalHide}>تایید</button>\r\n    </div>\r\n    </div>, document.getElementById('modal-root'))\r\n}","import { TaksActionTypes } from \"./ActionType\";\r\nimport { TasksApi } from \"./api\";\r\nimport { EModal } from \"../../Components/Modals/ErrorModal\";\r\n\r\n\r\nexport const createModal= (open) => (dispatch, getState) => {\r\n    dispatch({ type: TaksActionTypes.CreateModalStatus, open })\r\n\r\n}\r\nexport const fetchList = () => async (dispatch, getState) => {\r\n    dispatch({ type: TaksActionTypes.FetchTaskList })\r\n    try {\r\n        const res = await TasksApi.fetchList()\r\n        if (res.data) {\r\n            dispatch({ type: TaksActionTypes.FetchTaskListSuccess, list: res.data })\r\n        }else {\r\n            EModal(res)\r\n            dispatch({ type: TaksActionTypes.FetchTaskListFaild })\r\n        }\r\n    } catch (error) {\r\n        dispatch({ type: TaksActionTypes.FetchTaskListFaild })\r\n        EModal(error)\r\n    }\r\n\r\n}\r\nexport const createTask = (data) => async (dispatch, getState) => {\r\n    dispatch({ type: TaksActionTypes.CreateTask })\r\n    try {\r\n        const res = await TasksApi.create(data)\r\n        if (res.data) {\r\n            dispatch({ type: TaksActionTypes.CreateTaskSuccess });\r\n            createModal(false)(dispatch, getState)\r\n            fetchList()(dispatch, getState)\r\n        }else {\r\n            EModal(res)\r\n            dispatch({ type: TaksActionTypes.CreateTaskFaild })\r\n        }\r\n    } catch (error) {\r\n        dispatch({ type: TaksActionTypes.CreateTaskFaild })\r\n        EModal(error)\r\n    }\r\n\r\n}\r\n\r\nexport const changeTaskStatus = (data) => async (dispatch, getState) => {\r\n    dispatch({ type: TaksActionTypes.ChangeTaskStatus, data })\r\n    try {\r\n        const res = await TasksApi.changeTaskStatus(data)\r\n        if (res.data) {\r\n            dispatch({ type: TaksActionTypes.ChangeTaskStatusSuccess });\r\n            fetchList()(dispatch, getState)\r\n        }else {\r\n            EModal(res)\r\n            dispatch({ type: TaksActionTypes.ChangeTaskStatusFaild })\r\n        }\r\n    } catch (error) {\r\n        dispatch({ type: TaksActionTypes.ChangeTaskStatusFaild })\r\n        EModal(error)\r\n    }\r\n\r\n}","import React from 'react';\r\n// import loader from \"../assets/loading.svg\"\r\n// import loaderIcon from \"../assets/loaderIcon.svg\"\r\nconst Spinner = ({\r\n    loading,\r\n    msg,\r\n    icon,\r\n    text\r\n}) => {\r\n    \r\n    if(icon) {\r\n        if(loading) {\r\n            return ( <div class=\"spIcon\">\r\n            <div class=\"bounce1\"></div>\r\n            <div class=\"bounce2\"></div>\r\n            <div class=\"bounce3\"></div>\r\n          </div> )\r\n        }\r\n        return (\r\n            <span> {text} </span>\r\n        )\r\n    }\r\n    if(loading){\r\n        return <div className=\"spinner\">\r\n            <div className=\"loader\"> {msg} </div>\r\n            <p>\r\n                {msg}\r\n            </p>\r\n        </div>\r\n    }\r\n    return null\r\n    \r\n}\r\n\r\nSpinner.defaultProps = {\r\n    msg: 'در حال دریافت اطلاعات'\r\n  };\r\nexport default Spinner","import React, { useEffect, useState } from 'react';\r\nimport Spinner from '../../Utils/Spinner';\r\n\r\nconst Modal = ({\r\n    visible,\r\n    title,\r\n    onOk,\r\n    onCancel,\r\n    children,\r\n    loading\r\n}) => {\r\n\r\n    const [isOpen, openStatus] = useState(false)\r\n    const [showModal, setShowModal] = useState(false)\r\n    useEffect(() => {\r\n\r\n        if(visible){\r\n            setShowModal(true)\r\n            setTimeout(() => {\r\n                openStatus(true)\r\n            }, 100);\r\n        }\r\n\r\n        if(!visible){\r\n            openStatus(false)\r\n            setTimeout(() => {\r\n                setShowModal(false)\r\n            }, 250);\r\n        }\r\n        \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [visible])\r\n    if(!showModal) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"modalContainer\">\r\n            <div className=\"modalBackBox\" onClick={onCancel}></div>\r\n            <div className={isOpen ?\"modal modalOpen\" :\"modal\"}>\r\n            <div className=\"modalHeader\">\r\n                <div className=\"Modaltitle\"> {title} </div>\r\n                <div className=\"closeIcon\" onClick={onCancel}>X</div>\r\n            </div>\r\n            <div className=\"modalBody\">\r\n                {children}\r\n            </div>\r\n            <div className=\"ModalFooter\">\r\n            <button className=\"btnGold\" onClick={onOk}>\r\n                <Spinner icon={true} text= \"ثبت\"  loading={loading} />\r\n            </button>\r\n            <button className=\"btnCancel\" onClick={onCancel}>بستن</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nModal.defaultProps = {\r\n    loading: false\r\n}\r\n\r\nexport default Modal","import * as React from 'react';\r\n\r\n\r\n\r\n\r\nexport const FormCreator = (Component) =>\r\n    class Form extends React.Component{\r\n        constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                data: {},\r\n                err: {},\r\n                rules: {}\r\n            }\r\n        }\r\n\r\n        itemValidation = (name, value, rules) => {\r\n            if(!rules){\r\n                return true\r\n            }\r\n            let isValid = true;\r\n            let msg = \"\"\r\n            const err = this.state.err;\r\n            rules.forEach((rule) => {\r\n                if (rule.required && isValid) {\r\n                    isValid = value.toString().trim() !== \"\"\r\n                    if (!isValid) {\r\n                        msg = rule.msg;\r\n                    }\r\n                    err[name] = { msg, isValid }\r\n                }\r\n\r\n                if (rule.max && isValid) {\r\n                    isValid = value.length <= rule.max\r\n                    if (!isValid) {\r\n                        msg = rule.msg\r\n                    }\r\n                    err[name] = { msg, isValid }\r\n                }\r\n            });\r\n            this.setState({ err })\r\n            return isValid\r\n        }\r\n\r\n        onFormSubmit = () => {\r\n            const { data, rules } = this.state\r\n            let err = null;\r\n            let isValid = true;\r\n            for (const item in rules) {\r\n                const validationError = this.itemValidation(item, data[item], rules[item])\r\n                if (isValid) {\r\n                    isValid = validationError\r\n                }\r\n    \r\n            }\r\n\r\n            if (isValid) {\r\n                err = null\r\n            } else {\r\n                err = this.state.err\r\n            }\r\n            return {data, err}\r\n        }\r\n        \r\n        onChangeHandler(name, e, rules) {\r\n            const data= this.state.data ? { ...this.state.data } : {}\r\n            let value = e;\r\n            if (e.target) {\r\n                value = e.target.value\r\n            }\r\n            data[name] = value\r\n            this.setState({ data })\r\n            if (rules) {\r\n                this.itemValidation(name, value, rules);\r\n            }\r\n\r\n        }\r\n\r\n        getFormValues = () => {\r\n            return this.state\r\n        }\r\n\r\n        resetForm = () => {\r\n            this.setState({\r\n                data: {},\r\n                err: {},\r\n                rules: {}\r\n            })\r\n        }\r\n\r\n        initialValues = (name, newRules) => {\r\n            const {rules, data} = this.state\r\n            if(newRules){\r\n                rules[name] = newRules\r\n            }\r\n            data[name] = \"\"\r\n            this.setState({ rules, data})\r\n        }\r\n\r\n        formItem = (itemProps, comp) => {\r\n            const newValue= this.state.data[itemProps.name] !== undefined ? \r\n            this.state.data[itemProps.name] : itemProps.initialvalue ? itemProps.initialvalue : \"\"\r\n            const initialElement = {\r\n                name: itemProps.name,\r\n                initialvalue: itemProps.initialvalue,\r\n                defaultValue: itemProps.initialvalue,\r\n                label: itemProps.label,\r\n                onChange: (e) => {\r\n                    if (comp.props.onChange) {\r\n                        comp.props.onChange(e)\r\n                    }\r\n                    this.onChangeHandler(itemProps.name, e, itemProps.rules)\r\n                },\r\n                value: newValue\r\n            }\r\n\r\n            const El = React.cloneElement(comp,  initialElement, comp.props.children);\r\n            return <FromItemWrapper\r\n                label={itemProps.label}\r\n                id={comp.props.id ? comp.props.id : itemProps.name}\r\n                name={itemProps.name}\r\n                itemElement={El}\r\n                initialValues={this.initialValues}\r\n                rules={itemProps.rules}\r\n                err={this.state.err && this.state.err[itemProps.name] ? this.state.err[itemProps.name].msg : null} />\r\n        }\r\n\r\n        render() {\r\n            return <Component {...this.props}\r\n                getFormItem={this.formItem}\r\n                getFormValues={this.getFormValues}\r\n                onFormSubmit={this.onFormSubmit}\r\n                resetForm={this.resetForm} />;\r\n        }\r\n    };\r\n\r\nconst FromItemWrapper = (props) => {\r\n    React.useEffect(() => {\r\n            props.initialValues(props.name, props.rules)\r\n        \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    return (\r\n        <div className=\"itemWrapper\">\r\n            {props.itemElement}\r\n            {props.err && <small className=\"validationError\"> {props.err} </small>}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nclass Option extends React.Component {\r\n}\r\n\r\nexport default Option;","import * as React from 'react';\r\n\r\n\r\nclass COption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    // render() {\r\n    //     return this.props.children;\r\n    // }\r\n}\r\n\r\nexport default COption;","import * as React from 'react';\r\nimport Option from \"./Option\";\r\nimport COption from \"./COption\";\r\nimport { urlGeneral } from \"../../../GeneralConst\";\r\nimport arrowIcon from \"../../../assets/arrow.svg\"\r\n\r\nclass Select extends React.Component {\r\n     static Option = Option;\r\n     static COption = COption;\r\n\r\n    static defaultProps = {\r\n        valueProp: \"id\",\r\n        displayProp: \"title\"\r\n    };\r\n\r\n\r\n    ref;\r\n    optionRef;\r\n    optionContainer;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayValue: \"\",\r\n            searchValue: \"\",\r\n            value: \"\",\r\n            showOption: false,\r\n            showInput: true,\r\n            activeItem: 0,\r\n            optionList: [],\r\n            optionElement: []\r\n        };\r\n        this.ref = React.createRef()\r\n        this.optionRef = React.createRef();\r\n        this.optionContainer = React.createRef();\r\n    }\r\n\r\n    getOptions = (url) => {\r\n        let authorization = this.props.token ? this.props.token: \"\";\r\n        if (this.props.authorization) {\r\n            authorization = this.props.authorization\r\n        }\r\n        fetch(urlGeneral + url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Authorization': authorization,\r\n            },\r\n        })\r\n            .then(response => response.json())\r\n            .then(json =>  this.setState({ optionList: json.data ? json.data : [] }, () => {\r\n                this.setInitialValue()\r\n                this.moveFocus()\r\n                this.getChildren()\r\n            }))\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.url){\r\n            if(this.props.url !== prevProps.url){\r\n                this.setState({\r\n                    displayValue: \"\",\r\n                    value: \"\",\r\n                    searchValue: \"\",\r\n                    activeItem: 0,\r\n                }, () => {\r\n                    this.props.onChange(\"\")\r\n                })\r\n                this.getOptions(this.props.url)\r\n            }\r\n        }\r\n    }\r\n\r\n    hideOption = () => {\r\n        const displayProp = this.props.displayProp ? this.props.displayProp : \"title\";\r\n        const valueProp = this.props.valueProp ? this.props.valueProp : \"id\";\r\n        let { displayValue, showInput } = this.state\r\n        if (this.state.value !== \"\" && this.state.optionList) {\r\n            const displayValueItem = this.state.optionList && this.state.optionList.filter(item => item[valueProp].toString() === this.state.value.toString())[0];\r\n            displayValue = displayValueItem ? displayValueItem[displayProp] : \"\"\r\n        }\r\n        showInput = false;\r\n        this.setState({ showOption: false, showInput, displayValue });\r\n    }\r\n\r\n    handleClickOutside = (e) => {\r\n        if (this.optionRef.current && !this.optionRef.current.contains(e.target)) {\r\n            this.hideOption()\r\n        }\r\n    }\r\n    setInitialValue() {\r\n        const displayProp = this.props.displayProp ? this.props.displayProp : \"title\";\r\n        const valueProp = this.props.valueProp ? this.props.valueProp : \"id\";\r\n        if (this.props.initialvalue !== undefined) {\r\n            const displayValueItem = this.state.optionList.length > 0 &&\r\n                this.state.optionList.filter(item => {\r\n                    return this.props.initialvalue &&\r\n                        item[valueProp].toString() === this.props.initialvalue.toString()\r\n                });\r\n            if (displayValueItem && displayValueItem.length > 0) {\r\n                const displayValue = displayValueItem[0][displayProp]\r\n                this.setState({ value: this.props.initialvalue.toString(), displayValue }, () => {\r\n                    if (this.props.onChange) {\r\n                        this.props.onChange(this.state.value)\r\n                    }\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.url) {\r\n            this.getOptions(this.props.url)\r\n        } else if (this.props.optionList) {\r\n            this.setState({ optionList: this.props.optionList }, () => {\r\n                this.setInitialValue();\r\n                this.getChildren();\r\n                this.moveFocus();\r\n            })\r\n        } else {\r\n            this.getChildren();\r\n            this.moveFocus();\r\n        }\r\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\r\n    }\r\n\r\n\r\n\r\n    optionHandler = (status) => {\r\n        this.setState({ showOption: status, showInput: true, searchValue: \"\" }, () => {\r\n            this.ref.current && this.ref.current.focus()\r\n        })\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ searchValue: event.target.value, displayValue: \"\", activeItem: 0 })\r\n    }\r\n    _handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            if (this.state.optionList) {\r\n                const displayProp = this.props.displayProp ? this.props.displayProp : \"title\";\r\n                const valueProp = this.props.valueProp ? this.props.valueProp : \"id\";\r\n                const matchData = this.state.searchValue.toLocaleLowerCase().trim()\r\n                const datas = this.state.optionList.filter(data => data[displayProp].toLocaleLowerCase().trim().match(matchData));\r\n                if(datas[this.state.activeItem]){\r\n                    const id = datas[this.state.activeItem][valueProp];\r\n                    const targetData = datas.filter(data => data[valueProp].toString() === id.toString())[0]\r\n                    this.onSelectHandler(targetData)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onSelectHandler = (data) => {\r\n        const displayProp = this.props.displayProp ? this.props.displayProp : \"title\";\r\n        const valueProp = this.props.valueProp ? this.props.valueProp : \"id\";\r\n        this.setState({\r\n            value: data.props ? data.props[valueProp].toString() : data[valueProp],\r\n            displayValue: data.props ? data.props[displayProp] : data[displayProp],\r\n            showOption: false,\r\n            showInput: false,\r\n            activeItem: 0\r\n        }, () => {\r\n            if (this.props.onChange) {\r\n                this.props.onChange(this.state.value)\r\n            }\r\n        })\r\n    }\r\n\r\n    moveFocus = () => {\r\n        const displayProp = this.props.displayProp ? this.props.displayProp : \"title\";\r\n        const node = this.ref.current;\r\n        if(!node){\r\n            return\r\n        }\r\n        node.addEventListener('keydown', (e) => {\r\n            const matchData = this.state.searchValue.toLocaleLowerCase().trim()\r\n            const items = this.state.optionList ?\r\n                this.state.optionList.filter(data => data[displayProp].toLocaleLowerCase().trim().match(matchData)) : [];\r\n            let activeIndex = this.state.activeItem\r\n            if (e.keyCode === 40 && activeIndex < (items.length - 1)) {\r\n                activeIndex++\r\n            }\r\n            if (e.keyCode === 38 && activeIndex > 0) {\r\n                activeIndex--\r\n            }\r\n            this.setState({ activeItem: activeIndex })\r\n        });\r\n    }\r\n\r\n\r\n    getChildren = () => {\r\n        const displayProp = this.props.displayProp ? this.props.displayProp : \"title\";\r\n        const valueProp = this.props.valueProp ? this.props.valueProp : \"id\";\r\n        let options = [];\r\n        if (this.props.url || this.props.optionList) {\r\n            options = [];\r\n            this.state.optionList.forEach((option, i) => {\r\n                const optionElement = (z) => {\r\n                    return(<div key={i} id={option[valueProp]}\r\n                        className=\"selectOption\"\r\n                        onClick={() => {\r\n                            this.onSelectHandler(option)\r\n                        }}>\r\n                        {option[displayProp]}\r\n                    </div>)\r\n                }\r\n                options.push({ [valueProp]: option[valueProp], [displayProp]: option[displayProp], optionElement })\r\n            })\r\n            this.setState({ optionList: options })\r\n        }else {\r\n        React.Children.forEach(this.props.children, (x, i) => {\r\n            let y = x;\r\n            if (y.type === Option) {\r\n                const optionElement = (z) => {\r\n\r\n                    return (<div key={y.props[valueProp]}\r\n                        id={y.props[valueProp]}\r\n                        className={z === y.props[valueProp] ? \"selectOption activeOption\" : \"selectOption\"}\r\n                        onClick={() => {\r\n                            this.onSelectHandler(y)\r\n                        }}>\r\n                        {y.props[displayProp]}\r\n                    </div>)\r\n                }\r\n                options.push({ [valueProp]: y.props[valueProp], [displayProp]: y.props[displayProp], optionElement })\r\n\r\n            }\r\n            if (y.type === COption) {\r\n                const optionElement = (z) => {\r\n\r\n                    return (<div key={y.props[valueProp]} id={y.props[valueProp]}\r\n                        className={z === y.props[valueProp] ? \"selectOption activeOption\" : \"selectOption\"}\r\n                        onClick={() => this.onSelectHandler(y)}>\r\n                        {typeof y.props.children === \"function\" ? y.props.children(y.props) : y.props.children}\r\n                    </div>)\r\n                }\r\n                options.push({ [valueProp]: y.props[valueProp], [displayProp]: y.props[displayProp], optionElement })\r\n            }\r\n        });\r\n        this.setState({ optionList: options })\r\n    }\r\n\r\n    }\r\n\r\n     renderOptionList = (options) => {\r\n        const displayProp = this.props.displayProp ? this.props.displayProp : \"title\";\r\n        const valueProp = this.props.valueProp ? this.props.valueProp : \"id\";\r\n        if (this.state.searchValue !== \"\" && options.length > 0) {\r\n            const matchData = this.state.searchValue.toLocaleLowerCase().trim()\r\n            options = options.filter((option) => option[displayProp].toLocaleLowerCase().trim().match(matchData));\r\n        }\r\n        if(!options){\r\n            return null\r\n        }\r\n        return options.map((option) => {\r\n            return (option.optionElement ? option.optionElement(options[this.state.activeItem][valueProp]) : null)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"selecContainer\" ref={this.optionRef}>\r\n                <div className=\"displayContainer\" onClick={() => this.optionHandler(true)}>\r\n                    <div className=\"inputContainer\">\r\n                        { this.props.canSearch && <input\r\n                            id={this.props.id}\r\n                            tabIndex={1}\r\n                            className=\"selectInput\" ref={this.ref} onKeyDown={this._handleKeyDown}\r\n                            onBlur={this.hideOption}\r\n                            style={{\r\n                                display: this.state.showInput ? \"block\" : \"none\",\r\n                                width: this.state.searchValue.length === 0 ? \"19px\" : (this.state.searchValue.length * 9) + \"px\"\r\n                            }}\r\n                            type=\"text\" \r\n                            onChange={(event) => this.onChangeHandler(event)} \r\n                            value={this.state.searchValue} />}\r\n                    </div>\r\n                    <div className=\"selectDisplay\">\r\n                        {this.state.displayValue}\r\n                    </div>\r\n                    <div className=\"selectBtn\">\r\n                        <img className=\"icon\" src={arrowIcon} alt=\" \" />\r\n                    </div>\r\n                </div>\r\n                <div ref={this.optionContainer} tabIndex={-1} style={this.props.position === \"bottom\" ? {bottom: \"100%\"} : { top: \"100%\"}}\r\n                    className={this.state.showOption ? \"optionContainer\" : \"optionContainer optionHide\"}>\r\n                    {this.renderOptionList(this.state.optionList)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;","import React, { useEffect } from 'react';\r\nimport Modal from '../Modals/Modal';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createModal, createTask } from \"../../Actions/Tasks/Actions\";\r\nimport { FormCreator } from \"../../Utils/FormController\";\r\nimport Select from '../../Utils/FormElements/Select/Select';\r\nconst CreateTaskForm = ({\r\n    getFormItem,\r\n    onFormSubmit,\r\n    resetForm\r\n}) => {\r\n\r\n    const tasks = useSelector(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n    const onOk = () => {\r\n        const values = onFormSubmit()\r\n        if(!values.err){\r\n           dispatch(createTask(values.data))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n            if(!tasks.createModalStatus){\r\n                resetForm()\r\n            }\r\n            \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tasks.createModalStatus])\r\n    return (\r\n        <Modal\r\n        visible= {tasks.createModalStatus}\r\n        onCancel={()=> dispatch(createModal(false))}\r\n        loading={tasks.loading === \"createTask\"}\r\n        onOk={onOk}\r\n        title=\"ثبت تسک جدید\"\r\n        >\r\n            <form onSubmit={onOk}>\r\n                <label htmlFor=\"description\"> توضیحات</label>\r\n                {getFormItem({\r\n                    name: \"description\",\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            msg: \"توضیحات تسک میبایست تعیین شود\"\r\n                        }\r\n                    ]\r\n                }, <textarea id=\"description\" className=\"txtInput\" />)}\r\n                <label htmlFor=\"status\">وضعیت</label>\r\n                {getFormItem({ \r\n                    initialvalue: \"تعریف شده\",\r\n                    name: \"status\"\r\n                }, \r\n                    <Select \r\n                        optionList={[\r\n                            {id: \"تعریف شده\", title: \"تعریف شده\"},\r\n                            {id: \"در حال انجام\", title: \"در حال انجام\"},\r\n                            {id: \"انجام شد\", title: \"انجام شد\"},\r\n                        ]}\r\n                    />\r\n                )}\r\n            </form>\r\n        </Modal>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default FormCreator(CreateTaskForm)","export const SubTaksActionTypes = {\r\n    \r\n    SubTaskCreateModalStatus: \"SubTasks/SubTaskCreateModalStatus\",\r\n    \r\n    AddSubTask: \"SubTasks/AddSubTask\",\r\n    AddSubTaskSuccess: \"SubTasks/AddSubTaskSuccess\",\r\n    AddSubTaskFaild: \"SubTasks/AddSubTaskFaild\",\r\n\r\n    ChangeSubTaskStatus: \"SubTask/ChangeSubTaskStatus\",\r\n    ChangeSubTaskStatusSuccess: \"SubTask/ChangeSubTaskStatusSuccess\",\r\n    ChangeSubTaskStatusFaild: \"SubTask/ChangeSubTaskStatusFaild\",\r\n}"," import { urlGeneral } from \"../../GeneralConst\"\r\nimport axios from '../../AxiosConfig'\r\n\r\nexport const SubTasksApi = {\r\n    addSubTask : async (taskId, data) => {\r\n        return axios.put(urlGeneral+ \"/tasks/\" + taskId, data)\r\n    },\r\n    \r\n    changeSubTaskStatus : async (task) => {\r\n        return axios.put(urlGeneral+ \"/tasks/\" + task._id, task)\r\n    },\r\n}","import { SubTaksActionTypes } from \"./ActionType\";\r\nimport { SubTasksApi } from \"./api\";\r\nimport { fetchList } from \"../Tasks/Actions\"\r\nimport { EModal } from \"../../Components/Modals/ErrorModal\";\r\n\r\nexport const addSubTaskModal= (open, mainTask) => (dispatch, getState) => {\r\n    dispatch({ type: SubTaksActionTypes.SubTaskCreateModalStatus, open, mainTask })\r\n\r\n}\r\n\r\n\r\nexport const addSubTask = (newSubtask) => async (dispatch, getState) => {\r\n    dispatch({ type: SubTaksActionTypes.AddSubTask })\r\n    const mainTask = getState().subtask.mainTask;\r\n    if(!mainTask){\r\n        dispatch({ type: SubTaksActionTypes.AddSubTaskFaild })\r\n        EModal(\"تسک مورد نظر موجود نیست\")\r\n    }\r\n    if(mainTask){\r\n        const newSubList = mainTask.subtasks ? [...mainTask.subtasks, newSubtask] : [newSubtask]\r\n        mainTask.subtasks = newSubList\r\n    }\r\n    try {\r\n        const res = await SubTasksApi.addSubTask(mainTask._id, mainTask)\r\n        if (res.data) {\r\n            dispatch({ type: SubTaksActionTypes.AddSubTaskSuccess });\r\n            addSubTaskModal(false, null)(dispatch, getState)\r\n            fetchList()(dispatch, getState)\r\n        }\r\n    } catch (error) {\r\n        dispatch({ type: SubTaksActionTypes.AddSubTaskFaild })\r\n        EModal(error)\r\n    }\r\n\r\n}\r\n\r\nexport const changeSubTaskStatus = (data) => async (dispatch, getState) => {\r\n    dispatch({ type: SubTaksActionTypes.ChangeSubTaskStatus })\r\n    try {\r\n        const res = await SubTasksApi.changeSubTaskStatus(data)\r\n        if (res.data) {\r\n            dispatch({ type: SubTaksActionTypes.ChangeSubTaskStatusSuccess });\r\n            fetchList()(dispatch, getState)\r\n        }\r\n    } catch (error) {\r\n        dispatch({ type: SubTaksActionTypes.ChangeSubTaskStatusFaild })\r\n        EModal(error)\r\n    }\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Modal from '../Modals/Modal';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addSubTaskModal, addSubTask } from \"../../Actions/SubTasks/Actions\";\r\nimport { FormCreator } from \"../../Utils/FormController\";\r\nimport Select from '../../Utils/FormElements/Select/Select';\r\nconst AddSubTaskForm = ({\r\n    getFormItem,\r\n    onFormSubmit,\r\n    resetForm\r\n}) => {\r\n\r\n    const subtask = useSelector(state => state.subtask)\r\n    const dispatch = useDispatch()\r\n    const onOk = () => {\r\n        const values = onFormSubmit()\r\n        if(!values.err){\r\n           dispatch(addSubTask(values.data))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n            if(!subtask.addSubTaskModal){\r\n                resetForm()\r\n            }\r\n            \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [subtask.addSubTaskModal])\r\n    return (\r\n        <Modal\r\n        visible= {subtask.addSubTaskModal}\r\n        onCancel={()=> dispatch(addSubTaskModal(false, null))}\r\n        loading={subtask.loading === \"createSubTask\"}\r\n        onOk={onOk}\r\n        title=\"ثبت ریزشاخه جدید\"\r\n        >\r\n            <form onSubmit={onOk}>\r\n                <label htmlFor=\"description\"> شرح حال</label>\r\n                {getFormItem({\r\n                    name: \"description\",\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            msg: \"شرح حال الزامی است\"\r\n                        }\r\n                    ]\r\n                }, <textarea id=\"description\" className=\"txtInput\" />)}\r\n                <label htmlFor=\"status\">وضعیت</label>\r\n                {getFormItem({ \r\n                    initialvalue: \"تعریف شده\",\r\n                    name: \"status\"\r\n                }, \r\n                    <Select \r\n                        optionList={[\r\n                            {id: \"تعریف شده\", title: \"تعریف شده\"},\r\n                            {id: \"در حال انجام\", title: \"در حال انجام\"},\r\n                            {id: \"انجام شد\", title: \"انجام شد\"},\r\n                        ]}\r\n                    />\r\n                )}\r\n            </form>\r\n        </Modal>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default FormCreator(AddSubTaskForm)","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Access = ({role, children}) => {\r\n\r\n    const currentUser = useSelector(state => state.auth)\r\n    if(!currentUser.data){\r\n        return null\r\n    }\r\n    if(!currentUser.data.role  || currentUser.data.role !== role) {\r\n        return null\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            {children}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Access","import React from 'react';\r\n\r\nconst MenuIcon = () => {\r\n\r\n\r\n    return (\r\n        <div className=\"iconContainer\">\r\n            <div className=\"menIcon\"></div>\r\n            <div className=\"menIcon\"></div>\r\n            <div className=\"menIcon\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MenuIcon","import React from 'react';\r\nimport Access from './Access';\r\nimport listIcon from \"../assets/icon.svg\";\r\nimport loadingIcon from \"../assets/loading.svg\";\r\nimport MenuIcon from './menuIcon';\r\nimport Spinner from './Spinner';\r\n\r\nconst StatusBox = ({\r\n    currentStatus,\r\n    accessRole,\r\n    statusChange,\r\n    loading\r\n}) => {\r\n\r\n    return (\r\n        <span className=\"status\"> \r\n            <Access role={accessRole}>\r\n                {loading ? (\r\n                    <Spinner icon={true} loading={loading} />\r\n                ) : (\r\n                    <MenuIcon />\r\n                )}\r\n                <div className=\"stausHandler\">\r\n                    <p \r\n                    onClick={() => {statusChange(\"برای انجام\")}}\r\n                    style={{ backgroundColor: \"royalblue\" }}>برای انجام</p>\r\n                    <p \r\n                    onClick={() => {statusChange(\"در حال انجام\")}}\r\n                    style={{ backgroundColor: \"lightcoral\" }}>در حال انجام</p>\r\n                    <p \r\n                    onClick={() => {statusChange(\"انجام شد\")}}\r\n                    style={{ backgroundColor: \"lightseagreen\" }}>انجام شد</p>\r\n                </div>\r\n            </Access>\r\n            {currentStatus}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default StatusBox","import React from 'react';\r\nimport StatusBox from '../../Utils/StatusBox';\r\n\r\nconst SubTaskCard = ({subtask, changeStatus, loading}) => {\r\n\r\n    return (\r\n        <div className=\"subtask\">\r\n            <div className=\"subTaskactionBar\">\r\n            <StatusBox \r\n                loading={loading}\r\n                statusChange={(value) => changeStatus(value)}\r\n                currentStatus={subtask.status} \r\n                accessRole=\"employee\" />\r\n                \r\n            </div>\r\n            <div className=\"subTaskContent\">\r\n                {subtask.description}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default SubTaskCard","import React, { useState } from 'react';\r\nimport Access from '../../Utils/Access';\r\nimport SubTaskCard from '../SubTask/Card';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addSubTaskModal } from '../../Actions/SubTasks/Actions'\r\nimport { changeTaskStatus } from '../../Actions/Tasks/Actions'\r\nimport { changeSubTaskStatus } from '../../Actions/SubTasks/Actions'\r\nimport StatusBox from '../../Utils/StatusBox';\r\nconst TaskCard = ({ task }) => {\r\n\r\n    const [targetSubTask, setTargetSubTask] = useState()\r\n    const subtaskLoading = useSelector(state => state.subtask.loading)\r\n    const tasksData = useSelector(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n    const taskstatusChangeHandler = (status) => {\r\n        const updatedTask = JSON.parse(JSON.stringify(task))\r\n        updatedTask.status = status;\r\n        dispatch(changeTaskStatus(updatedTask))\r\n    }\r\n    \r\n    const subTaskstatusChangeHandler = (status, index) => {\r\n        const updatedTask = JSON.parse(JSON.stringify(task));\r\n        updatedTask.subtasks[index].status = status;\r\n        setTargetSubTask(index)\r\n        dispatch(changeSubTaskStatus(updatedTask))\r\n    }\r\n    \r\n    return (\r\n        <div className=\"taskCard\">\r\n            <div className=\"actionBar\">\r\n               <Access role=\"employee\">  <button \r\n               onClick={() => dispatch(addSubTaskModal(true, task))}\r\n               className=\"addSubTaskBtn\"> + </button> </Access>\r\n                <StatusBox \r\n                loading = {tasksData.targetTask === task._id && tasksData.loading === \"changeTaskStatus\"}\r\n                statusChange={(value) => taskstatusChangeHandler(value)}\r\n                currentStatus={task.status} \r\n                accessRole=\"admin\" />\r\n            </div>\r\n            <div className=\"taskDescription\">\r\n            {task.description}\r\n            \r\n            </div>\r\n            <div className=\"subtaskList\">\r\n            {task.subtasks ? task.subtasks.map((item, i) => {\r\n                return (\r\n                    <SubTaskCard subtask={item} \r\n                    loading={i === targetSubTask && subtaskLoading === \"changeSubTaskStatus\"} \r\n                    changeStatus={(value) => {\r\n                        subTaskstatusChangeHandler(value, i)\r\n                    }} />\r\n                )\r\n            }): (\r\n                <div className=\"nosubTask\">\r\n                    <p>  زیر شاخه‌ای برای تسک ثبت نشده است</p>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskCard","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchList, createModal } from '../../Actions/Tasks/Actions'\r\nimport CreateTaskForm from './Create';\r\nimport AddSubTaskForm from '../SubTask/Create';\r\nimport TaskCard from './Card';\r\n\r\nimport ScrollContainer from 'react-indiana-drag-scroll'\r\nimport Spinner from '../../Utils/Spinner';\r\nimport Access from '../../Utils/Access';\r\nconst TaskList = (props) => {\r\n    const tasks = useSelector(state => state.tasks)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(fetchList())\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n\r\n    if (!tasks) {\r\n        return null\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <CreateTaskForm />\r\n            <AddSubTaskForm />\r\n            <ScrollContainer hideScrollbars={false} className=\"scroll-container\">\r\n                <div className=\"taskList\">\r\n                <Spinner loading={tasks.loading === \"fetchTask\"} />\r\n\r\n                    {tasks.list && tasks.list.length > 0 ? tasks.list.map(task => {\r\n                        return <TaskCard key={\"KEY\" + task._id} task={task} />\r\n                    }) : (\r\n                        <div className=\"noTask\">\r\n                            هنوز تسک تعریف نشده است\r\n                           <Access role=\"admin\">\r\n                           <p> <button className=\"btnGold\" onClick={() => dispatch(createModal(true))}> ثبت تسک جدید </button> </p>\r\n                           </Access>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </ScrollContainer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TaskList","import React from 'react';\r\nimport TaskList from '../Tasks/List';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createModal } from \"../../Actions/Tasks/Actions\";\r\nimport Access from '../../Utils/Access';\r\nconst Panel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    return (\r\n        <div className=\"Panel\">\r\n                <TaskList />\r\n\r\n            <Access role=\"admin\"><div className=\"fab\" onClick={() => dispatch(createModal(true))}>+ </div></Access>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel","export const AuthActionTypes = {\r\n    //Register\r\n    Register: \"Auth/Register\",\r\n    RegisterSuccess: \"Auth/RegisterSuccess\",\r\n    RegisterFail: \"Auth/RegisterFail\",\r\n\r\n    //Login\r\n    Login: \"Auth/Login\",\r\n    LoginSuccess: \"Auth/LoginSuccess\",\r\n    LoginFail: \"Auth/LoginFail\",\r\n\r\n    //LogOut\r\n    LogOut: \"Auth/LogOut\"\r\n}"," import { urlGeneral } from \"../../GeneralConst\"\r\nimport axios from '../../AxiosConfig'\r\n\r\nexport const AuthApi = {\r\n    login : async (data) => {\r\n        return axios.get(urlGeneral+ \"/users?q=userName:\"+ data.userName)\r\n    },\r\n\r\n    register : async (data) => {\r\n        return axios.post(urlGeneral+ \"/users/register\", data)\r\n    }\r\n}","import { AuthActionTypes } from \"./ActionType\";\r\nimport { AuthApi } from \"./api\";\r\nimport { EModal } from \"../../Components/Modals/ErrorModal\";\r\n\r\nexport const registerRequest = (data) => async (dispatch, getState) => {\r\n    dispatch({ type: AuthActionTypes.Login })\r\n    try {\r\n        const res = await AuthApi.register(data)\r\n        if (res.data) {\r\n\r\n            const loginData = { userName: data.userName }\r\n            loginRequest(loginData)(dispatch, getState)\r\n            dispatch({ type: AuthActionTypes.LoginSuccess })\r\n        } else {\r\n            EModal(res)\r\n            dispatch({ type: AuthActionTypes.LoginFail })\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Errror\", error)\r\n        dispatch({ type: AuthActionTypes.LoginFail })\r\n        EModal(error)\r\n    }\r\n\r\n}\r\n\r\nexport const loginRequest = (data) => async (dispatch, getState) => {\r\n    dispatch({ type: AuthActionTypes.Login })\r\n    try {\r\n        const res = await AuthApi.login(data)\r\n        if (res.data) {\r\n            if(res.data.length > 0){\r\n                window.localStorage.setItem(\"task-userData\", JSON.stringify(res.data[0]));\r\n                dispatch({ type: AuthActionTypes.LoginSuccess, data: res.data[0] })\r\n            }\r\n            else {\r\n                EModal(\" کاربر یافت نشد\")\r\n                dispatch({ type: AuthActionTypes.LoginFail })\r\n            }\r\n    }else {\r\n        EModal(res)\r\n        dispatch({ type: AuthActionTypes.LoginFail })\r\n    }\r\n    } catch (error) {\r\n\r\n    dispatch({ type: AuthActionTypes.LoginFail })\r\n    EModal(error)\r\n}\r\n\r\n}\r\n\r\n\r\nexport const logOutRequest = () => (dispatch, getState) => {\r\n    window.localStorage.removeItem(\"task-userData\");\r\n    dispatch({ type: AuthActionTypes.LogOut });\r\n}\r\n","import React from 'react';\r\nimport logout from '../../assets/logout.svg'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logOutRequest } from '../../Actions/Auth/Actions'\r\nconst Navbar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const currentUser = useSelector(state => state.auth)\r\n    return (\r\n        <div className=\"navbar\">\r\n            <h1>کارتابل</h1>\r\n                {currentUser.isAuth && <img \r\n                onClick={() => dispatch(logOutRequest())}\r\n                className=\"logout\" src={logout} alt=\"خروج\"/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { registerRequest } from \"../../Actions/Auth/Actions\";\r\nimport { FormCreator } from \"../../Utils/FormController\";\r\nimport Select from '../../Utils/FormElements/Select/Select'\r\n\r\nconst Register = ({\r\n    getFormItem,\r\n    onFormSubmit,\r\n    switchPanel\r\n}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const onOk = (e) => {\r\n        e.preventDefault()\r\n        const values = onFormSubmit();\r\n        if (!values.err) {\r\n            dispatch(registerRequest(values.data))\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={onOk} className=\"register\">\r\n            <h3> ثبت نام</h3>\r\n            <div>\r\n                <label htmlFor=\"userName\">نام کاربری</label>\r\n                {getFormItem({\r\n                    name: \"userName\",\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            msg: \"نام کاربری را تعیین نمایید\"\r\n                        }\r\n                    ]\r\n                }, <input\r\n                    className=\"txtInput\"\r\n                    id=\"userName\"\r\n                    type=\"text\"\r\n                />)}\r\n                <label htmlFor=\"role\">نقش </label>\r\n                {getFormItem({\r\n                    name: \"role\",\r\n                    initialvalue: \"employee\",\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            msg: \"نقش را تعیین نمایید\"\r\n                        }\r\n                    ]\r\n                },\r\n                    <Select\r\n                        optionList={\r\n                            [\r\n                                { id: \"admin\", title: \"مدیر\" },\r\n                                { id: \"employee\", title: \"کارمند\" },\r\n                            ]\r\n                        }\r\n                    />)}\r\n            </div>\r\n            <div className=\"authFooter\">\r\n\r\n                <button type=\"submit\" className=\"btnGold\"> ثبت نام </button>\r\n                <button\r\n                onClick={switchPanel}\r\n                 type=\"button\" className=\"btnLink\">پنل ورود</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default FormCreator(Register)","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginRequest } from \"../../Actions/Auth/Actions\";\r\nimport { FormCreator } from \"../../Utils/FormController\";\r\nconst Login = ({\r\n    getFormItem,\r\n    onFormSubmit,\r\n    switchPanel\r\n}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const onOk = (e) => {\r\n        e.preventDefault();\r\n        const values = onFormSubmit();\r\n        if(!values.err){\r\n            dispatch(loginRequest(values.data ))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={onOk} className=\"login\">\r\n            <h3> ورود</h3>\r\n            <div>\r\n                <label htmlFor=\"userName\">نام کاربری</label>\r\n                {getFormItem({\r\n                    name:\"userName\",\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            msg: \"نام کاربری را وارد نمایید\"\r\n                        }\r\n                    ]\r\n                },\r\n                    <input\r\n                    className=\"txtInput\"\r\n                    id=\"userName\"\r\n                    type=\"text\"\r\n                />)}\r\n            </div>\r\n            <div className=\"authFooter\">\r\n                \r\n            <button type=\"submit\" className=\"btnGold\"> ورود </button>\r\n                <button \r\n                onClick={switchPanel}\r\n                type=\"button\" \r\n                className=\"btnLink\">پنل ثبت نام </button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default FormCreator(Login)","import React, { useState } from 'react';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport Spinner from '../../Utils/Spinner';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AuthPanel = () => {\r\n\r\n    const [panelName, setPanelName] = useState(\"login\")\r\n    const auth = useSelector(state => state.auth)\r\n    return(\r\n        <div className=\"auth\">\r\n            <Spinner loading={auth.loading} />\r\n            {panelName === \"register\" ? (\r\n                <Register switchPanel={() => setPanelName(\"login\")} />\r\n            ) : null}\r\n            {panelName === \"login\" ? (\r\n                <Login switchPanel={() => setPanelName(\"register\")} />\r\n            ) : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthPanel","import React from 'react';\nimport './Styles/main.css';\nimport { useSelector } from 'react-redux';\nimport Panel from './Components/Panel/Panel';\nimport Navbar from './Components/Navbar/Navbar';\nimport AuthPanel from './Components/Auth/Auth';\n\nfunction App() {\n\n  const auth = useSelector(state => state.auth)\n  return (\n    <div className=\"App\">\n      <Navbar />\n      {auth.isAuth ? ( <Panel /> ) : ( <AuthPanel />)}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { AuthActionTypes } from \"./ActionType\";\r\n\r\nconst unloadedState = {\r\n    isAuth: false,\r\n    loading: false,\r\n    data: null\r\n};\r\n\r\nexport const AuthReducer = (\r\n    state = unloadedState,\r\n    action,\r\n) => {\r\n    switch (action.type) {\r\n        case AuthActionTypes.Login: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        }\r\n        case AuthActionTypes.LoginSuccess: {\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n                loading: false,\r\n                data: action.data\r\n            }\r\n        }\r\n        case AuthActionTypes.LoginFail: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            }\r\n        }\r\n        \r\n        case AuthActionTypes.LogOut: {\r\n            return {\r\n                ...state,\r\n                isAuth: false,\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n","import { TaksActionTypes } from \"./ActionType\";\r\n\r\nconst unloadedState = {\r\n    list: [],\r\n    loading: \"\",\r\n    createModalStatus: false,\r\n    targetTask: null\r\n};\r\n\r\nexport const TasksReducer = (\r\n    state = unloadedState,\r\n    action,\r\n) => {\r\n    switch (action.type) {\r\n        case TaksActionTypes.FetchTaskList: {\r\n            return {\r\n                ...state,\r\n                loading: \"fetchTask\",\r\n            }\r\n        }\r\n        case TaksActionTypes.FetchTaskListSuccess: {\r\n            return {\r\n                ...state,\r\n                loading: \"\",\r\n                list: action.list\r\n            }\r\n        }\r\n        case TaksActionTypes.FetchTaskListFail: {\r\n            return {\r\n                ...state,\r\n                loading: \"\",\r\n            }\r\n        }\r\n        case TaksActionTypes.CreateModalStatus: {\r\n            return {\r\n                ...state,\r\n                createModalStatus: action.open,\r\n            }\r\n        }\r\n        case TaksActionTypes.CreateTask: {\r\n            return {\r\n                ...state,\r\n                loading: \"createTask\"\r\n            }\r\n        }\r\n        case TaksActionTypes.CreateTaskSuccess: {\r\n            return {\r\n                ...state,\r\n                loading: \"\"\r\n            }\r\n        }\r\n        case TaksActionTypes.CreateTaskFaild: {\r\n            return {\r\n                ...state,\r\n                loading: \"\"\r\n            }\r\n        }\r\n        case TaksActionTypes.ChangeTaskStatus: {\r\n            return {\r\n                ...state,\r\n                loading: \"changeTaskStatus\",\r\n                targetTask: action.data._id\r\n            }\r\n        }\r\n        case TaksActionTypes.ChangeTaskStatusSuccess: {\r\n            return {\r\n                ...state,\r\n                loading: \"\",\r\n                targetTask: null\r\n            }\r\n        }\r\n        case TaksActionTypes.ChangeTaskStatusFaild: {\r\n            return {\r\n                ...state,\r\n                loading: \"\",\r\n                targetTask: null\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n","import { SubTaksActionTypes } from \"./ActionType\";\r\n\r\nconst unloadedState = {\r\n    mainTask: null,\r\n    loading: \"\",\r\n    addSubTaskModal: false,\r\n};\r\n\r\nexport const SubTasksReducer = (\r\n    state = unloadedState,\r\n    action,\r\n) => {\r\n    switch (action.type) {\r\n        case SubTaksActionTypes.SubTaskCreateModalStatus: {\r\n            return {\r\n                ...state,\r\n                addSubTaskModal: action.open,\r\n                mainTask: action.mainTask\r\n            }\r\n        }\r\n        case SubTaksActionTypes.AddSubTask: {\r\n            return {\r\n                ...state,\r\n                loading: \"createSubTask\"\r\n            }\r\n        }\r\n        case SubTaksActionTypes.AddSubTaskSuccess: {\r\n            return {\r\n                ...state,\r\n                loading: \"\"\r\n            }\r\n        }\r\n        case SubTaksActionTypes.AddSubTaskFaild: {\r\n            return {\r\n                ...state,\r\n                loading: \"\"\r\n            }\r\n        }\r\n        case SubTaksActionTypes.ChangeSubTaskStatus: {\r\n            return {\r\n                ...state,\r\n                loading: \"changeSubTaskStatus\"\r\n            }\r\n        }\r\n        case SubTaksActionTypes.ChangeSubTaskStatusSuccess: {\r\n            return {\r\n                ...state,\r\n                loading: \"\"\r\n            }\r\n        }\r\n        case SubTaksActionTypes.ChangeSubTaskStatusFaild: {\r\n            return {\r\n                ...state,\r\n                loading: \"\"\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n","import { AuthReducer } from \"../Actions/Auth/Reducer\";\r\nimport { TasksReducer } from \"../Actions/Tasks/Reducer\";\r\nimport { SubTasksReducer } from \"../Actions/SubTasks/Reducer\";\r\n\r\n\r\nexport const reducers = {\r\n    auth: AuthReducer,\r\n    tasks: TasksReducer,\r\n    subtask: SubTasksReducer\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./store/ConfigureStore\";\nimport { Provider } from \"react-redux\";\n\nconst initialState = {}\nconst store = configureStore(initialState);\n\n\nconst isAuth = () => {\n  const userData = window.localStorage.getItem(\"task-userData\");\n  if(userData){\n      store.getState().auth.isAuth = true;\n      store.getState().auth.data = JSON.parse(userData);\n  }\n}\n\nexport const logOut = () => {\n  window.localStorage.removeItem(\"task-userData\");\n  store.getState().auth.isAuth = false;\n  store.getState().auth.data = null;\n}\nisAuth();\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}> <App /> </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducers } from \"./Reducers\";\r\n\r\nexport default function configureStore() {\r\n    const middleware = [thunk];\r\n    const enhancers = [];\r\n    const rootReducer = combineReducers({ ...reducers });\r\n    return createStore(\r\n        rootReducer,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ...enhancers,\r\n        ),\r\n    );\r\n}"],"sourceRoot":""}